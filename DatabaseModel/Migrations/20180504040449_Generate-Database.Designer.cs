// <auto-generated />
using DatabaseModel.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DatabaseModel.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180504040449_Generate-Database")]
    partial class GenerateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseModel.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Accessory");
                });

            modelBuilder.Entity("DatabaseModel.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Number");

                    b.Property<int>("PersonId");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DatabaseModel.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.HasKey("Id");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("DatabaseModel.Models.CarAccessoryNN", b =>
                {
                    b.Property<int>("CarId");

                    b.Property<int>("AccessoryId");

                    b.HasKey("CarId", "AccessoryId");

                    b.HasIndex("AccessoryId");

                    b.ToTable("CarAccessoryNN");
                });

            modelBuilder.Entity("DatabaseModel.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("DatabaseModel.Models.PersonCarNN", b =>
                {
                    b.Property<int>("PersonId");

                    b.Property<int>("CarId");

                    b.HasKey("PersonId", "CarId");

                    b.HasIndex("CarId");

                    b.ToTable("PersonCarNN");
                });

            modelBuilder.Entity("DatabaseModel.Models.Address", b =>
                {
                    b.HasOne("DatabaseModel.Models.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DatabaseModel.Models.CarAccessoryNN", b =>
                {
                    b.HasOne("DatabaseModel.Models.Accessory", "Accessory")
                        .WithMany()
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DatabaseModel.Models.Car", "Car")
                        .WithMany("CarAccessoryNN")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DatabaseModel.Models.PersonCarNN", b =>
                {
                    b.HasOne("DatabaseModel.Models.Car", "Car")
                        .WithMany("PersonCarNN")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DatabaseModel.Models.Person", "Person")
                        .WithMany("PersonCarNN")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
